// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  apiToken  String?
  tasks     Task[]
  goals     Goal[]
  ideas     Idea[]
  projects  Project[]
  expenses  Expense[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime?
  status      String    @default("pending")
  userId      String
  createdBy   User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Goal {
  id          String    @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime?
  status      String    @default("active")
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Idea {
  id          String   @id @default(uuid())
  title       String
  description String?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("in_progress")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Expense {
  id          String   @id @default(uuid())
  amount      Float
  description String?
  date        DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model ErrorLog {
  id         String   @id @default(uuid())
  message    String
  stackTrace String?
  createdAt  DateTime @default(now())
}
